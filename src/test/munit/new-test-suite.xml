<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <spring:beans>
    	<spring:import resource="classpath:main.xml"/>
    	<spring:import resource="classpath:second.xml"/>
    	
    </spring:beans>
	<munit:config doc:name="Munit configuration" mock-connectors="false" mock-inbounds="false"/>
    
    <munit:test name="test-1" description="Test1">
        <choice doc:name="Choice">
            <when expression="true">
                <munit:set payload="{name:1}" doc:name="Set Message"/>
                <logger message="payload: #[payload], message = #[message]" level="WARN" doc:name="test-post-notify-sms-202::START"/>
                <flow-ref name="mainFlow" doc:name="mainFlow"/>
                <logger message="#[message]" level="INFO" doc:name="Logger"/>
                <munit:assert-on-equals message="Outbound HTTP Status Code Match Failure" expectedValue="202" actualValue="202" doc:name="Assert Equals - http.status"/>
                <logger message="payload: #[payload], message = #[message]" level="WARN" doc:name="test-post-notify-sms-202::END"/>
            </when>
            <otherwise>
                <munit:assert-true message="Not HTTP 202" condition="#[true]" doc:name="Assert True"/>
            </otherwise>
        </choice>
    </munit:test>
    
    <munit:test name="test-2" description="Test2">
        <choice doc:name="Choice">
            <when expression="true">
                <munit:set payload="{name:1}" doc:name="Set Message"/>
                <logger message="payload: #[payload], message = #[message]" level="WARN" doc:name="test-post-notify-sms-202::START"/>
                <flow-ref name="mainFlow" doc:name="mainFlow"/>
                <logger message="#[message]" level="INFO" doc:name="Logger"/>
                <munit:assert-on-equals message="Outbound HTTP Status Code Match Failure" expectedValue="202" actualValue="203" doc:name="Assert Equals - http.status"/>
                <logger message="payload: #[payload], message = #[message]" level="WARN" doc:name="test-post-notify-sms-202::END"/>
            </when>
            <otherwise>
                <munit:assert-true message="Not HTTP 202" condition="#[true]" doc:name="Assert True"/>
            </otherwise>
        </choice>
    </munit:test>

</mule>
